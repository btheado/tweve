created: 20170630235042386
creator: 0.0.0.0
modified: 20170707031133448
modifier: 0.0.0.0
title: Codemirror and eve syntax highlighting
type: text/x-gfm

Create a tiddler with `type=text/x-gfm` and in view mode, the github flavored markdown contents will be rendered. In edit mode the codemirror plugin will be used to provide syntax highlighting for the markdown and for the Eve code stored inside code blocks.

With this standard Eve programs can be pasted in and they will be rednered nicely without having to change to the TiddlyWiki markup syntax.

TODO

1. Add highlightjs support for highighting Eve code. The eve code currently only has syntax highlighting in edit mode and not view mode.
2. In view mode, looks like html special characters are being escaped inside of code blocks. Ugh.

Details

* TiddlyWiki has its own wiki syntax which is not generally compatible with markdown
* TiddlyWiki has a [markdown plugin](http://tiddlywiki.com/plugins/tiddlywiki/markdown/) for rendering tiddlers as markdown if the type is set as text/x-markdown
* TiddlyWiki has a [codemirror plugin](http://tiddlywiki.com/plugins/tiddlywiki/codemirror/) which can replace the text box used for editing tiddler body text
* Codemirror supports syntax highlighting and an [eve mode](https://github.com/witheve/codemirror-mode-eve) has been written.
* Typed code blocks (in which eve code can be syntax highlighted) are mainly only available in GFM (Github flavored markdown).
* If the tiddler has `type=text/x-gfm`, then the nice eve syntax highlighting will be used in edit mode.
* However, the markdown plugin will not be used for rendering `text/x-gfm` so in view mode, this tiddler will look bad. Even if it did render `text/x-gfm` it would not look good because the supported markdown flavors do not support the typed code blocks
* As a solution for this, I created my own markdown wrapper using the https://markdown-it.github.io/ library which supports GFM.

```eve
search
  a = 1
bind
  [#ui/div text: "hi"]
```

```javascript
var foo = function (bar) {
  return bar++;
};

console.log(foo(5));
```

**nols**

_italics_
straight
*italics*

[I'm an inline-style link](https://www.google.com)

inline `code` has `back-ticks around` it.


```
No language indicated, so no syntax highlighting. 
But let's throw in a <b>tag</b>.
```

# H1
## H2
### H3
#### H4
##### H5
###### H6

Alternatively, for H1 and H2, an underline-ish style:

Alt-H1
======

Alt-H2
------

Tables are supported:

| Option | Description |
| ------ | ----------- |
| data   | path to data files to supply the data that will be passed into templates. |
| engine | engine to be used for processing templates. Handlebars is the default. |
| ext    | extension to be used for dest files. |

Images also:

![Minion](https://octodex.github.com/images/minion.png)
![Stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg "The Stormtroopocat")

